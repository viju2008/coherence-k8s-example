<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
   		<groupId>org.springframework.boot</groupId>
   		<artifactId>spring-boot-starter-parent</artifactId>
   		<version>2.3.3.RELEASE</version>
   		<relativePath/>
   	</parent>

    <groupId>org.example</groupId>
    <artifactId>spring-boot-storage-service-v</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>

        <version.lib.coherence>20.06.1</version.lib.coherence>
        <version.lib.hamcrest>1.3</version.lib.hamcrest>
        <version.lib.junit>5.6.1</version.lib.junit>
        <version.lib.mockito>3.3.3</version.lib.mockito>
        <version.lib.opentracing>0.33.0</version.lib.opentracing>
        <version.lib.opentracing.tracerresolver>0.1.8</version.lib.opentracing.tracerresolver>
        <version.lib.oracledb>19.7.0.0</version.lib.oracledb>

        <version.plugin.failsafe>2.22.2</version.plugin.failsafe>
        <version.plugin.jib>2.5.2</version.plugin.jib>
        <version.plugin.surefire>2.22.2</version.plugin.surefire>
    </properties>

    <dependencies>
        <!-- Dependency on the domain classes project -->
        <dependency>
            <groupId>com.oracle.coherence.examples</groupId>
            <artifactId>domain-model-v</artifactId>
            <version>1.0.0-SNAPSHOT</version>
        </dependency>

        <!-- Coherence dependencies -->
        <dependency>
            <groupId>com.oracle.coherence.ce</groupId>
            <artifactId>coherence</artifactId>
            <version>${version.lib.coherence}</version>
        </dependency>
        <dependency>
            <groupId>com.oracle.coherence.ce</groupId>
            <artifactId>coherence-management</artifactId>
            <version>${version.lib.coherence}</version>
        </dependency>
        <dependency>
            <groupId>com.oracle.coherence.ce</groupId>
            <artifactId>coherence-metrics</artifactId>
            <version>${version.lib.coherence}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- Oracle JDBC Driver -->
        <dependency>
            <groupId>com.oracle.database.jdbc</groupId>
            <artifactId>ojdbc10</artifactId>
            <version>${version.lib.oracledb}</version>
        </dependency>

        <dependency>
            <groupId>io.opentracing</groupId>
            <artifactId>opentracing-api</artifactId>
            <version>${version.lib.opentracing}</version>
        </dependency>
        <dependency>
            <groupId>io.opentracing</groupId>
            <artifactId>opentracing-noop</artifactId>
            <version>${version.lib.opentracing}</version>
        </dependency>
        <dependency>
            <groupId>io.opentracing</groupId>
            <artifactId>opentracing-util</artifactId>
            <version>${version.lib.opentracing}</version>
        </dependency>
        <dependency>
            <groupId>io.opentracing.contrib</groupId>
            <artifactId>opentracing-tracerresolver</artifactId>
            <version>${version.lib.opentracing.tracerresolver}</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${version.lib.hamcrest}</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${version.lib.mockito}</version>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${version.lib.junit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${version.lib.junit}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${version.lib.junit}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- Surefire plugin to run unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.plugin.surefire}</version>
                <configuration>
                    <reuseForks>false</reuseForks>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>5.6.1</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.vintage</groupId>
                        <artifactId>junit-vintage-engine</artifactId>
                        <version>5.6.1</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- Failsafe plugin to run integration tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${version.plugin.failsafe}</version>
                <configuration>
                    <reuseForks>false</reuseForks>
                    <systemProperties>
                        <oracle.db.url>jdbc:oracle:thin:@localhost:1521/ORCLPDB1</oracle.db.url>
                        <oracle.db.user>jonathan</oracle.db.user>
                        <oracle.db.pwd>secret</oracle.db.pwd>
                    </systemProperties>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>5.6.1</version>
                    </dependency>
                    <dependency>
                        <groupId>org.junit.vintage</groupId>
                        <artifactId>junit-vintage-engine</artifactId>
                        <version>5.6.1</version>
                    </dependency>
                </dependencies>
            </plugin>

            <!-- JIB plugin to build the OCI image -->
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${version.plugin.jib}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>dockerBuild</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <from>
                                <image>docker://gcr.io/distroless/java:11</image>
                            </from>
                            <to>
                                <image>coherence-example-spring-storage-v:${project.version}</image>
                            </to>
                            <container>
                                <mainClass>com.oracle.coherence.examples.storage.StorageApplication</mainClass>
                                <environment>
                                    <!-- Setting the COH_MAIN_CLASS environment variable will make the Coherence K8s Operator use
                                         the correct main class without needing to specify it the class name in the Coherence
                                         resource yaml -->
                                    <COH_MAIN_CLASS>com.oracle.coherence.examples.storage.StorageApplication</COH_MAIN_CLASS>
                                    <!-- Jaeger tracing variables -->
                                    <JAEGER_SAMPLER_TYPE>const</JAEGER_SAMPLER_TYPE>
                                    <JAEGER_SAMPLER_PARAM>1</JAEGER_SAMPLER_PARAM>
                                    <JAEGER_SERVICE_NAME>coherence</JAEGER_SERVICE_NAME>
                                </environment>
                                <jvmFlags>
                                    <jvmFlag>-Dcoherence.log=jdk</jvmFlag>
                                    <jvmFlag>-Dcoherence.metrics.http.enabled=true</jvmFlag>
                                    <jvmFlag>-Dcoherence.metrics.http.port=9612</jvmFlag>
                                    <jvmFlag>-Dcoherence.management.http=all</jvmFlag>
                                    <jvmFlag>-Dcoherence.management.http.port=30000</jvmFlag>
                                    <jvmFlag>-Dcoherence.extend.port=20000</jvmFlag>
                                    <jvmFlag>-Dcoherence.ttl=0</jvmFlag>
                                    <jvmFlag>-Dcoherence.tracing.ratio=1</jvmFlag>
                                </jvmFlags>
                                <ports>
                                    <port>9612</port>
                                    <port>30000</port>
                                    <port>20000</port>
                                </ports>
                            </container>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>